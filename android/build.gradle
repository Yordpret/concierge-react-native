// android/build.gradle

// based on:
//
// * https://github.com/facebook/react-native/blob/0.60-stable/template/android/build.gradle
//   previous location:
//   - https://github.com/facebook/react-native/blob/0.58-stable/local-cli/templates/HelloWorld/android/build.gradle
//
// * https://github.com/facebook/react-native/blob/0.60-stable/template/android/app/build.gradle
//   previous location:
//   - https://github.com/facebook/react-native/blob/0.58-stable/local-cli/templates/HelloWorld/android/app/build.gradle

// These defaults should reflect the SDK versions used by
// the minimum React Native version supported.
def DEFAULT_COMPILE_SDK_VERSION = 28
def DEFAULT_BUILD_TOOLS_VERSION = '28.0.3'
def DEFAULT_MIN_SDK_VERSION = 16
def DEFAULT_TARGET_SDK_VERSION = 28
def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

apply plugin: 'com.android.library'
apply plugin: 'com.google.gms.google-services'  // Google Services plugin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
repositories {
    google()
    // ref: https://www.baeldung.com/maven-local-repository
    mavenLocal()
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$rootDir/../node_modules/react-native/android"

    }
    maven {
        // Android JSC is installed from npm
        url "$rootDir/../node_modules/jsc-android/dist"
    }
    maven {
        url "https://flybits.jfrog.io/artifactory/android-repo/"
    }
    maven {
        url 'https://maven.google.com'
    }
    maven {
        url "https://jitpack.io"
    }

    jcenter()
}

buildscript {
    ext.kotlin_version = "1.6.10"
    // The Android Gradle plugin is only required when opening the android folder stand-alone.
    // This avoids unnecessary downloads and potential conflicts when the library is included as a
    // module dependency in an application project.
    // ref: https://docs.gradle.org/current/userguide/tutorial_using_tasks.html#sec:build_script_external_dependencies
    if (project == rootProject) {
        repositories {
            google()
        }

        dependencies {
            // This should reflect the Gradle plugin version used by
            // the minimum React Native version supported.
            classpath 'com.android.tools.build:gradle:7.1.0'
        }
    } else {
        repositories {
            google()
            jcenter()
        }
        dependencies {
            // This should reflect the Gradle plugin version used by
            // the minimum React Native version supported.
//            classpath 'com.android.tools.build:gradle:3.4.1'
            classpath 'com.google.gms:google-services:4.3.3'
            classpath 'com.android.tools.build:gradle:7.1.0'
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
            classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        }
    }
}
//    classpath 'com.google.gms:google-services:4.3.10'


android {
    compileSdkVersion safeExtGet('compileSdkVersion', DEFAULT_COMPILE_SDK_VERSION)
    buildToolsVersion safeExtGet('buildToolsVersion', DEFAULT_BUILD_TOOLS_VERSION)
    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', DEFAULT_MIN_SDK_VERSION)
        targetSdkVersion safeExtGet('targetSdkVersion', DEFAULT_TARGET_SDK_VERSION)
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}



dependencies {
    //noinspection GradleDynamicVersion
    implementation 'com.facebook.react:react-native:+'  // From node_modules
//    implementation 'com.flybits.android:concierge:4.0.0'
    implementation 'com.google.firebase:firebase-core:20.1.0'
    implementation 'com.flybits.android:concierge:3.7.1'
}

def configureReactNativePom(def pom) {
    def packageJson = new groovy.json.JsonSlurper().parseText(file('../package.json').text)

    pom.project {
        name packageJson.title
        artifactId packageJson.name
        version = packageJson.version
        group = "com.reactlibrary"
        description packageJson.description
        url packageJson.repository.baseUrl

        licenses {
            license {
                name packageJson.license
                url packageJson.repository.baseUrl + '/blob/master/' + packageJson.licenseFilename
                distribution 'repo'
            }
        }

        developers {
            developer {
                id packageJson.author.username
                name packageJson.author.name
            }
        }
    }
}
//
//afterEvaluate { project ->
//    // some Gradle build hooks ref:
//    // https://www.oreilly.com/library/view/gradle-beyond-the/9781449373801/ch03.html
//    task androidJavadoc(type: Javadoc) {
//        source = android.sourceSets.main.java.srcDirs
//        classpath += files(android.bootClasspath)
//        classpath += files(project.getConfigurations().getByName('compile').asList())
//        include '**/*.java'
//    }
//
//    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
//        classifier = 'javadoc'
//        from androidJavadoc.destinationDir
//    }
//
//    task androidSourcesJar(type: Jar) {
//        classifier = 'sources'
//        from android.sourceSets.main.java.srcDirs
//        include '**/*.java'
//    }
//
//    android.libraryVariants.all { variant ->
//        def name = variant.name.capitalize()
//        def javaCompileTask = variant.javaCompileProvider.get()
//
//        task "jar${name}"(type: Jar, dependsOn: javaCompileTask) {
//            from javaCompileTask.destinationDir
//        }
//    }
//
//    artifacts {
//        archives androidSourcesJar
//        archives androidJavadocJar
//    }
//
//    task installArchives(type: Upload) {
//        configuration = configurations.archives
//        repositories.mavenDeployer {
//            // Deploy to react-native-event-bridge/maven, ready to publish to npm
//            repository url: "file://${projectDir}/../android/maven"
//            configureReactNativePom pom
//        }
//    }
//}

